import * as z from "zod";

export const CorporateActionSchema = z.object({});
export type CorporateAction = z.infer<typeof CorporateActionSchema>;

export const RangeSchema = z.object({
     low: z.number().optional(),
     high: z.number().optional(),
});
export type Range = z.infer<typeof RangeSchema>;

export const StocksApiResponseSchema = z.object({
     language: z.string().optional(),
     region: z.string().optional(),
     quoteType: z.string().optional(),
     typeDisp: z.string().optional(),
     quoteSourceName: z.string().optional(),
     triggerable: z.boolean().optional(),
     customPriceAlertConfidence: z.string().optional(),
     currency: z.string().optional(),
     marketState: z.string().optional(),
     hasPrePostMarketData: z.boolean().optional(),
     firstTradeDateMilliseconds: z.coerce.date().optional(),
     priceHint: z.number().optional(),
     regularMarketChangePercent: z.number().optional(),
     regularMarketPrice: z.number().optional(),
     corporateActions: z.array(CorporateActionSchema).optional(),
     regularMarketTime: z.coerce.date().optional(),
     exchange: z.string().optional(),
     messageBoardId: z.string().optional(),
     exchangeTimezoneName: z.string().optional(),
     exchangeTimezoneShortName: z.string().optional(),
     gmtOffSetMilliseconds: z.number().optional(),
     market: z.string().optional(),
     esgPopulated: z.boolean().optional(),
     longName: z.string().optional(),
     shortName: z.string().optional(),
     regularMarketChange: z.number().optional(),
     regularMarketDayHigh: z.number().optional(),
     regularMarketDayRange: RangeSchema.optional(),
     regularMarketDayLow: z.number().optional(),
     regularMarketVolume: z.number().optional(),
     regularMarketPreviousClose: z.number().optional(),
     bid: z.number().optional(),
     ask: z.number().optional(),
     bidSize: z.number().optional(),
     askSize: z.number().optional(),
     fullExchangeName: z.string().optional(),
     financialCurrency: z.string().optional(),
     regularMarketOpen: z.number().optional(),
     averageDailyVolume3Month: z.number().optional(),
     averageDailyVolume10Day: z.number().optional(),
     fiftyTwoWeekLowChange: z.number().optional(),
     fiftyTwoWeekRange: RangeSchema.optional(),
     fiftyTwoWeekHighChange: z.number().optional(),
     fiftyTwoWeekHighChangePercent: z.number().optional(),
     fiftyTwoWeekLow: z.number().optional(),
     fiftyTwoWeekHigh: z.number().optional(),
     fiftyTwoWeekChangePercent: z.number().optional(),
     earningsTimestamp: z.coerce.date().optional(),
     earningsTimestampStart: z.coerce.date().optional(),
     earningsTimestampEnd: z.coerce.date().optional(),
     earningsCallTimestampStart: z.number().optional(),
     earningsCallTimestampEnd: z.number().optional(),
     isEarningsDateEstimate: z.boolean().optional(),
     trailingAnnualDividendRate: z.number().optional(),
     trailingPE: z.number().optional(),
     dividendRate: z.number().optional(),
     trailingAnnualDividendYield: z.number().optional(),
     dividendYield: z.number().optional(),
     epsTrailingTwelveMonths: z.number().optional(),
     epsForward: z.number().optional(),
     epsCurrentYear: z.number().optional(),
     priceEpsCurrentYear: z.number().optional(),
     sharesOutstanding: z.number().optional(),
     bookValue: z.number().optional(),
     fiftyDayAverage: z.number().optional(),
     fiftyDayAverageChange: z.number().optional(),
     fiftyDayAverageChangePercent: z.number().optional(),
     twoHundredDayAverage: z.number().optional(),
     twoHundredDayAverageChange: z.number().optional(),
     twoHundredDayAverageChangePercent: z.number().optional(),
     marketCap: z.number().optional(),
     forwardPE: z.number().optional(),
     priceToBook: z.number().optional(),
     sourceInterval: z.number().optional(),
     exchangeDataDelayedBy: z.number().optional(),
     tradeable: z.boolean().optional(),
     cryptoTradeable: z.boolean().optional(),
     symbol: z.string().optional(),
});
export type StocksApiResponse = z.infer<typeof StocksApiResponseSchema>;
